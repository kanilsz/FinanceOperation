// <auto-generated />
using System;
using FinanceOperation.Api.Infrastructure.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceOperation.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230728175100_UpdatePropositionsEntityV2")]
    partial class UpdatePropositionsEntityV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceOperation.Api.Domain.Propositions.DepositProposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<string>("PropositionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Summary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Deposits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDateTime = new DateTime(2023, 7, 28, 17, 51, 0, 108, DateTimeKind.Utc).AddTicks(3018),
                            IsDeleted = false,
                            Percentage = 1000.0,
                            PropositionNumber = "e1505ce8-4a6b-4189-a216-59bca8e28280",
                            StartDateTime = new DateTime(2023, 7, 28, 17, 51, 0, 108, DateTimeKind.Utc).AddTicks(3017),
                            Summary = 1000m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Percentage = 102.0,
                            PropositionNumber = "ed62b47a-9651-4cbf-a728-1a7bd1847118",
                            StartDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = 10001m
                        });
                });

            modelBuilder.Entity("FinanceOperation.Api.Domain.Users.UserIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "kon@gmail.com",
                            FirstName = "Maksym",
                            Password = "password",
                            SecondName = "Konotop"
                        });
                });

            modelBuilder.Entity("FinanceOperation.Domain.Propositions.CreditProposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<string>("PropositionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Summary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Credits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Percentage = 1000.0,
                            PropositionNumber = "cf4fdeff-c38f-4156-9073-36cfb3ff6cd3",
                            StartDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = 1000m
                        },
                        new
                        {
                            Id = 2,
                            EndDateTime = new DateTime(2023, 7, 28, 17, 51, 0, 108, DateTimeKind.Utc).AddTicks(2954),
                            IsDeleted = false,
                            Percentage = 102.0,
                            PropositionNumber = "e5be29aa-2e38-464e-8769-492625c75ef4",
                            StartDateTime = new DateTime(2023, 7, 28, 17, 51, 0, 108, DateTimeKind.Utc).AddTicks(2950),
                            Summary = 10001m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinanceOperation.Api.Domain.Propositions.DepositProposition", b =>
                {
                    b.HasOne("FinanceOperation.Api.Domain.Users.UserIdentity", null)
                        .WithMany("Deposits")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FinanceOperation.Domain.Propositions.CreditProposition", b =>
                {
                    b.HasOne("FinanceOperation.Api.Domain.Users.UserIdentity", null)
                        .WithMany("Credits")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FinanceOperation.Api.Domain.Users.UserIdentity", b =>
                {
                    b.Navigation("Credits");

                    b.Navigation("Deposits");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using FinanceOperation.Api.Infrastructure.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceOperation.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230722120802_InitialScheme")]
    partial class InitialScheme
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceOperation.Api.Domain.Propositions.DepositProposition", b =>
                {
                    b.Property<int>("DepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepositId"));

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<string>("PropositionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Summary")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DepositId");

                    b.HasIndex("UserId");

                    b.ToTable("Deposits");

                    b.HasData(
                        new
                        {
                            DepositId = 1,
                            EndDateTime = new DateTime(2023, 7, 22, 12, 8, 2, 479, DateTimeKind.Utc).AddTicks(3990),
                            IsDeleted = false,
                            Percentage = 1000.0,
                            PropositionNumber = "698fef24-d466-441c-8712-3ca222e20c27",
                            StartDateTime = new DateTime(2023, 7, 22, 12, 8, 2, 479, DateTimeKind.Utc).AddTicks(3989),
                            Summary = 1000.0,
                            UserId = 1
                        },
                        new
                        {
                            DepositId = 2,
                            EndDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Percentage = 102.0,
                            PropositionNumber = "3becfec9-9dbb-4f78-b789-8a6ec0edb30b",
                            StartDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = 10001.0
                        });
                });

            modelBuilder.Entity("FinanceOperation.Api.Domain.Users.UserIdentity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "kon@gmail.com",
                            FirstName = "Maksym",
                            IsDeleted = false,
                            Password = "password",
                            SecondName = "Konotop"
                        });
                });

            modelBuilder.Entity("FinanceOperation.Domain.Propositions.CreditProposition", b =>
                {
                    b.Property<int>("CreditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditId"));

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<string>("PropositionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Summary")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CreditId");

                    b.HasIndex("UserId");

                    b.ToTable("Credits");

                    b.HasData(
                        new
                        {
                            CreditId = 1,
                            EndDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Percentage = 1000.0,
                            PropositionNumber = "5e639614-36ca-4f99-bff5-42dc131e0407",
                            StartDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Summary = 1000.0
                        },
                        new
                        {
                            CreditId = 2,
                            EndDateTime = new DateTime(2023, 7, 22, 12, 8, 2, 479, DateTimeKind.Utc).AddTicks(3954),
                            IsDeleted = false,
                            Percentage = 102.0,
                            PropositionNumber = "5d98ac45-6899-4b93-8291-04d82814b318",
                            StartDateTime = new DateTime(2023, 7, 22, 12, 8, 2, 479, DateTimeKind.Utc).AddTicks(3951),
                            Summary = 10001.0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinanceOperation.Api.Domain.Propositions.DepositProposition", b =>
                {
                    b.HasOne("FinanceOperation.Api.Domain.Users.UserIdentity", null)
                        .WithMany("Deposits")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FinanceOperation.Domain.Propositions.CreditProposition", b =>
                {
                    b.HasOne("FinanceOperation.Api.Domain.Users.UserIdentity", null)
                        .WithMany("Credits")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FinanceOperation.Api.Domain.Users.UserIdentity", b =>
                {
                    b.Navigation("Credits");

                    b.Navigation("Deposits");
                });
#pragma warning restore 612, 618
        }
    }
}
